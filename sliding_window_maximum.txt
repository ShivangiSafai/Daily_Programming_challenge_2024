class Solution {
public:
    vector<int> maxSlidingWindow(vector<int>& nums, int k) {
        vector<int> ans;
        deque<int> q;
        int maxi = INT_MIN;
        for (int i = 0; i < k; i++) {
            
            while (!q.empty() && nums[q.back()] <= nums[i]) {
                q.pop_back();
            }
            q.push_back(i);
        }
        ans.push_back(nums[q.front()]);

     
        for (int i = k; i < nums.size(); i++) {

           
            while (!q.empty() && i - (q.front()) >= k) {
                q.pop_front();
            }
            int curr = nums[i];
           
            while (!q.empty() && nums[q.back()] <= curr) {
                q.pop_back();
            }

            q.push_back(i);
            ans.push_back(nums[q.front()]);
        }
        return ans;
    }
};